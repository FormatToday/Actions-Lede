#
# 感谢 P3TERX <https://p3terx.com>
# <https://github.com/P3TERX/Actions-OpenWrt/>
#

name: 编译OpenWrt

on:
  push:
    branches: 
      - main
  schedule:
    - cron: 0 8 * * 5
  watch:
    types: started
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: 检出
        uses: actions/checkout@master
        with:
          ref: main
          fetch-depth: 0

      - name: 缓存
        uses: klever1988/cachewrtbuild@main
        with:
          ccache: 'true'
          toolchain: 'false'

      - name: 空间清理
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo timedatectl set-timezone "Asia/Shanghai"
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android /opt/ghc
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
          df -h

      - name: 初始化环境
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E apt-get -yqq update
          sudo -E apt-get -yqq install ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          
      - name: clone 代码
        run: |
          git clone https://github.com/coolsnowwolf/lede
          mv ./lede/* ./

      - name: 安装 Helloword
        run: |
          sed -i "/helloworld/d" "feeds.conf.default"
          echo "src-git helloworld https://github.com/fw876/helloworld.git" >> "feeds.conf.default"

      - name: 更新 feeds
        run: |
          ./scripts/feeds update -a

      - name: 安装 feeds
        run: |
          ./scripts/feeds install -a
          
      - name: 复制自定义配置文件
        run: |
          cp .config ./lede/.config
          make defconfig
          
      - name: 下载包
        run: |
          make download -j$(nproc)

      - name: 编译
        run: |
          make -j$(nproc) || make -j1 || make -j1 V=s

      - name: 删除其他文件
        run: |
          ls ./bin/targets/*/*/
          shopt -s extglob
          rm -rf ./bin/targets/*/*/!(openwrt*combined*.img)
          ls ./bin/targets/*/*/
  
      - name: 生成发行标签
        id: tag
        run: |
          echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M")"
          touch release.txt
          echo "::set-output name=status::success"

      - name: 上传固件到制品库
        uses: actions/upload-artifact@v3
        with:
          path: ./bin/targets/*/*/*.img

      - name: 上传到发行版
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          body_path: release.txt
          files: ./bin/targets/*/*/*.img

      - name: 删除旧 Actions
        uses: Mattraks/delete-workflow-runs@v2.0.3
        with:
          token: ${{ secrets.TOKEN }}
          repository: ${{ github.repository }}
          retain_days: 1
          keep_minimum_runs: 2

      - name: 删除旧版本
        uses: smallprogram/delete-older-releases@v0.2.1
        with:
          keep_latest: 3
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
